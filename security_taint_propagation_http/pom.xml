<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>security.taint.propagation.http</artifactId>

  <parent>
    <groupId>at.dallermassl</groupId>
    <artifactId>security.taint.propagation-reactor</artifactId>
    <version>0.0.5-SNAPSHOT</version>
	<relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <bootclasspath>${basedir}/../security_taint_extension/target/tainted-rt-${compiler.version}.jar</bootclasspath>
  </properties>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>at.dallermassl</groupId>
      <artifactId>security.tainted.rt</artifactId>
      <version>${compiler.version}</version>
      <scope>system</scope>
      <systemPath>${bootclasspath}</systemPath>
    </dependency>
    <dependency>
      <groupId>at.dallermassl</groupId>
      <artifactId>security.taint.propagation</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>


  <build>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. Prevents eclipse problems
          like "Plugin execution not covered by lifecycle configuration" when this
          project used as a maven project nature: http://stackoverflow.com/questions/6352208/how-to-solve-plugin-execution-not-covered-by-lifecycle-configuration-for-sprin -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>test-compile</goal>
                      <goal>compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${compiler.version}</source>
          <target>${compiler.version}</target>
          <compilerArguments>
            <bootclasspath>${bootclasspath}</bootclasspath>
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.10</version>
        <configuration>
          <showWeaveInfo>true</showWeaveInfo>
          <source>${compiler.version}</source>
          <target>${compiler.version}</target>
          <Xlint>ignore</Xlint>
          <complianceLevel>${compiler.version}</complianceLevel>
          <encoding>UTF-8</encoding>
          <verbose>false</verbose>
          <bootclasspath>${bootclasspath}</bootclasspath>
          <outxml>true</outxml>
          <!-- <aspectLibraries> <aspectLibrary> <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId> </aspectLibrary> </aspectLibraries> -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <argLine>-Xbootclasspath/p:${bootclasspath}</argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
